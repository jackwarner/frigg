service: frigg

provider:
  name: aws
  runtime: nodejs6.10
  stage: local
  environment:
    LOG_LEVEL:
      Fn::FindInMap: [ LogLevel, '${opt:stage, self:provider.stage}', level ]
    GITHUB_WEBHOOK_SECRET:
      Fn::Join:
        - '-'
        - - '${opt:stage, self:provider.stage}'
          - Ref: AWS::AccountId
  iamRole:
    - Effect: Allow
      Resource: '*'
      Action: '*'

functions:

  GitHubEventHandler:
    handler: github/webhook.handler
    events:
      - http:
          path: github
          method: post
          cors: true

  # CheckPipelineStatus:
  #   handler: handler.hello
  #   events:
  #     - sns: check-pipeline-status-${opt:stage, self:provider.stage}

  CreatePipeline:
    handler: pipelines/create.handler
    events:
      - sns: create-pipeline-${opt:stage, self:provider.stage}

  RemovePipeline:
    handler: pipelines/remove.handler
    events:
      - sns: remove-pipeline-${opt:stage, self:provider.stage}

  # add this arn to create/update/delete, use it to update status in dynamodb
  SavePipelineStatus:
    handler: pipelines/saveStatus.handler
    events:
      - sns: save-pipeline-status-${opt:stage, self:provider.stage}

resources:
  Description: Automated service for managing CodePipelines for repos & branches inside a GitHub organization

  Mappings:
    LogLevel:
      test:
        level: TRACE
      local:
        level: TRACE
      automation:
        level: INFO
      production:
        level: INFO
  
  Resources:
    # DynamoDB table for storing pipeline information - which exist, build status, etc.
